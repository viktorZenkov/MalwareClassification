#written by Viktor Zenkov in 2018


from pyparsing import *
import numpy as np
import pprint
import re
import time
import os 



blanks = ' \t'
ParserElement.setDefaultWhitespaceChars(blanks)



#version with simplified line code giving text

mainStrings = []

def addLine(tokens):
    
    if (tokens.hexcommands != ''):
        mainStrings.append(' '.join(tokens.hexcommands))

#we have a set of hexademical numbers and then a set of text commands in many lines. Sometimes that text
#happens to begin with a lowercase hexadecimal number (like db), so we make hexnumscap include only capital letters.
hexnumscap = '0123456789ABCDEF?'

#A hexadecimal command is either of the form "xx" (possibly and question marks) or the form "xx+".
#The Combine here is required for the code to work
hexapair = Combine(Word(hexnumscap, exact=2) + Optional(Literal('+')) + WordEnd())

#The hexadecimal commands are a set of hexadecimal commands, which we call "hexcommands".
hexcommands = OneOrMore(hexapair)('hexcommands')

#The text commands are any text up to the end of the line or a ";", and we call them "textcommands".
textcommands = CharsNotIn(';\n')('textcommands')

#if there is a semicolon in a line that signifies a comment, and we name the rest of the line "comment".
comment = Suppress(';') + restOfLine('comment')

#line = (lineheader + Optional(hexcommands) + Optional(textcommands) + Optional(comment) + LineEnd()).setParseAction(addLine)
line = (Optional(hexcommands) + Optional(textcommands) + Optional(comment) + LineEnd()).setParseAction(addLine)

entirefile = Optional(OneOrMore(Literal('\n'))) + OneOrMore(line)


#parse


f_path = 'asmfiles'

allFileNames = sorted(os.listdir(f_path + '/'))

asmFileNames = [ i for i in allFileNames if i.endswith('.asm')]

for f_name in asmFileNames:
    print(f_name[:-4])
    
    f = open(f_path + '/' + f_name,encoding='latin-1')
    
    fileText = ''
    counter = 0

    time1 = time.time()
    mainStrings = []

    while True:
        #counter += 1
        line = f.readline()
        if (line == ''):
            break
        if line.startswith('.text'):
            fileText = fileText + line[14:]
            counter += 1
        if (counter > 1000):
            entirefile.parseString(fileText)
            fileText = ''
            counter = 0

    f.close()
    
    if (counter > 0):
        entirefile.parseString(fileText)

    time2 = time.time()


    for i in range(len(mainStrings)):
        
        pattern = re.compile(r'\s+')
        temp = re.sub(pattern,' ',mainStrings[i])
        temp = temp + '\n'

        mainStrings[i] = temp
        if (mainStrings[i] == '\n'):
            mainStrings[i] = ''

    mainString = ''.join(mainStrings)
    
    g = open(f_path + 'Output/' + f_name[:-4] + 'hex.txt','w')
    
    g.write(mainString)
    
    g.close()

    print (time2-time1)
